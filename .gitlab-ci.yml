image: docker:27

stages:
  - build
  - test

variables:
  BACKEND_IMAGE: "${CI_REGISTRY}/app/todo-backend"
  FRONTEND_IMAGE: "${CI_REGISTRY}/app/todo-frontend"

.dind:
  services:
    - name: docker:27-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - TAG=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}

build-backend:
  extends: .dind
  stage: build
  script:
    - time docker buildx build --tag "$BACKEND_IMAGE:$TAG" --push ./backend/

build-frontend:
  extends: .dind
  stage: build
  script:
    - time docker buildx build --tag "$FRONTEND_IMAGE:$TAG" --push ./frontend/

test-backend:
  extends: .dind
  stage: test
  variables:
    DB_DATABASE: todo
    DB_USER: todo
  script:
    - echo "TAG=$TAG" > .env
    - echo "DB_PASSWORD=\"$(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c 10)\"" >> .env
    - docker compose up --detach --quiet-pull
    - apk add curl jq
    - sleep 10
    - |-
      curl --silent --fail --header 'Content-type: application/json' --request POST http://docker:8080/api/todos/ \
          --data-raw '{"title":"title1","description":"desc1","completed":false}' --output result.json
      id=$(jq -r '.id' result.json)
      curl --silent --fail --header 'Content-type: application/json' --request PUT http://docker:8080/api/todos/$id/ \
          --data-raw "$(jq -c '.completed=true' result.json)" --output result.json
      curl --silent --fail --header 'Content-type: application/json' --request GET http://docker:8080/api/todos/$id/ \
          --output result.json
      curl --silent --fail --header 'Content-type: application/json' --request DELETE http://docker:8080/api/todos/$id/ \
          --output result.json
  after_script:
    - docker compose logs backend
    - docker compose down
